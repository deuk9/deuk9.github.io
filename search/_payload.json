[{"data":1,"prerenderedAt":775},["ShallowReactive",2],{"posts":3,"search":727},[4,698],{"id":5,"title":6,"date":7,"description":8,"path":9,"body":10},"contents/blog/test/index.md","archunit 을 활용한 코드 컨벤션 검증","2023-12-03","","/blog/test",{"type":11,"value":12,"toc":687},"minimal",[13,18,27,34,46,50,53,57,61,70,76,80,95,99,103,106,423,427,431,551,555,654,657,660,679,683],[14,15,17],"h2",{"id":16},"_1-archunit-을-활용한-테스트","1. archunit 을 활용한 테스트",[19,20,21,25],"ul",{},[22,23,24],"li",{},"테스트",[22,26,24],{},[28,29,30],"p",{},[31,32],"img",{"alt":24,"src":33},"/blog/test/sample.png",[28,35,36,37,40,41,43,44,43],{},"런타임전에 코드를 분석한다.",[38,39],"br",{},"\n코드 컨벤션, 안티 패턴등을 체크하는데 유용하다.",[38,42],{},"\n클래스의 postfix, 의존성, 어노테이션 체크등 여러가지 기능을 제공한다.",[38,45],{},[47,48,49],"h1",{"id":47},"H1",[14,51,52],{"id":14},"H2",[54,55,56],"h3",{"id":54},"H3",[58,59,60],"h4",{"id":58},"H4",[62,63,64,67],"ol",{},[22,65,66],{},"순서테스트",[22,68,69],{},"순서테스트 2",[28,71,72],{},[73,74,75],"code",{},"code 테스트 입니다",[14,77,79],{"id":78},"_2-의존성","2. 의존성",[81,82,86],"pre",{"className":83,"code":84,"language":85,"meta":8,"style":8},"language-gradle shiki shiki-themes github-light","testImplementation 'com.tngtech.archunit:archunit:1.1.0'\n","gradle",[73,87,88],{"__ignoreMap":8},[89,90,93],"span",{"class":91,"line":92},"line",1,[89,94,84],{},[14,96,98],{"id":97},"_3-테스트-작성","3. 테스트 작성",[54,100,102],{"id":101},"_31-코드-컨벤션-체크","3.1 코드 컨벤션 체크",[28,104,105],{},"아래의 예제는 controller 패키지의 클래스명은 Controller 로 끝나야하고, @RestController 어노테이션을 포함해야 한다는 것을 검증하는 코드이다.",[81,107,111],{"className":108,"code":109,"language":110,"meta":8,"style":8},"language-java shiki shiki-themes github-light","public class ArchitectureTest {  \n  \n  \n    JavaClasses javaClasses;  \n  \n    @BeforeEach  \n    void setup() {  \n        javaClasses = new ClassFileImporter()  \n                .withImportOption(new ImportOption.DoNotIncludeTests())  \n                .importPackages(\"com.example.deuktest\");  \n    }  \n  \n    @Test  \n    @DisplayName(\"Contoller 패키지의 클래스는 Contoller 로 끝나야한다.\")  \n    void controllerTest(){  \n        ArchRule rule = classes()  \n                .that().resideInAnyPackage(\"..controller\")  \n                .should().haveSimpleNameEndingWith(\"Controller\");  \n  \n        ArchRule annotationRule = classes()  \n                .that().resideInAnyPackage(\"..controller\")  \n                .should().beAnnotatedWith(RestController.class);  \n  \n        rule.check(javaClasses);  \n        annotationRule.check(javaClasses);  \n    }  \n}\n","java",[73,112,113,130,136,141,147,152,163,175,193,217,234,240,245,255,271,282,295,316,336,341,353,370,385,390,402,412,417],{"__ignoreMap":8},[89,114,115,119,122,126],{"class":91,"line":92},[89,116,118],{"class":117},"sXGI6","public",[89,120,121],{"class":117}," class",[89,123,125],{"class":124},"stlaL"," ArchitectureTest",[89,127,129],{"class":128},"sXk0b"," {  \n",[89,131,133],{"class":91,"line":132},2,[89,134,135],{"class":128},"  \n",[89,137,139],{"class":91,"line":138},3,[89,140,135],{"class":128},[89,142,144],{"class":91,"line":143},4,[89,145,146],{"class":128},"    JavaClasses javaClasses;  \n",[89,148,150],{"class":91,"line":149},5,[89,151,135],{"class":128},[89,153,155,158,161],{"class":91,"line":154},6,[89,156,157],{"class":128},"    @",[89,159,160],{"class":117},"BeforeEach",[89,162,135],{"class":128},[89,164,166,169,172],{"class":91,"line":165},7,[89,167,168],{"class":117},"    void",[89,170,171],{"class":124}," setup",[89,173,174],{"class":128},"() {  \n",[89,176,178,181,184,187,190],{"class":91,"line":177},8,[89,179,180],{"class":128},"        javaClasses ",[89,182,183],{"class":117},"=",[89,185,186],{"class":117}," new",[89,188,189],{"class":124}," ClassFileImporter",[89,191,192],{"class":128},"()  \n",[89,194,196,199,202,205,208,211,214],{"class":91,"line":195},9,[89,197,198],{"class":128},"                .",[89,200,201],{"class":124},"withImportOption",[89,203,204],{"class":128},"(",[89,206,207],{"class":117},"new",[89,209,210],{"class":128}," ImportOption.",[89,212,213],{"class":124},"DoNotIncludeTests",[89,215,216],{"class":128},"())  \n",[89,218,220,222,225,227,231],{"class":91,"line":219},10,[89,221,198],{"class":128},[89,223,224],{"class":124},"importPackages",[89,226,204],{"class":128},[89,228,230],{"class":229},"s2cXZ","\"com.example.deuktest\"",[89,232,233],{"class":128},");  \n",[89,235,237],{"class":91,"line":236},11,[89,238,239],{"class":128},"    }  \n",[89,241,243],{"class":91,"line":242},12,[89,244,135],{"class":128},[89,246,248,250,253],{"class":91,"line":247},13,[89,249,157],{"class":128},[89,251,252],{"class":117},"Test",[89,254,135],{"class":128},[89,256,258,260,263,265,268],{"class":91,"line":257},14,[89,259,157],{"class":128},[89,261,262],{"class":117},"DisplayName",[89,264,204],{"class":128},[89,266,267],{"class":229},"\"Contoller 패키지의 클래스는 Contoller 로 끝나야한다.\"",[89,269,270],{"class":128},")  \n",[89,272,274,276,279],{"class":91,"line":273},15,[89,275,168],{"class":117},[89,277,278],{"class":124}," controllerTest",[89,280,281],{"class":128},"(){  \n",[89,283,285,288,290,293],{"class":91,"line":284},16,[89,286,287],{"class":128},"        ArchRule rule ",[89,289,183],{"class":117},[89,291,292],{"class":124}," classes",[89,294,192],{"class":128},[89,296,298,300,303,306,309,311,314],{"class":91,"line":297},17,[89,299,198],{"class":128},[89,301,302],{"class":124},"that",[89,304,305],{"class":128},"().",[89,307,308],{"class":124},"resideInAnyPackage",[89,310,204],{"class":128},[89,312,313],{"class":229},"\"..controller\"",[89,315,270],{"class":128},[89,317,319,321,324,326,329,331,334],{"class":91,"line":318},18,[89,320,198],{"class":128},[89,322,323],{"class":124},"should",[89,325,305],{"class":128},[89,327,328],{"class":124},"haveSimpleNameEndingWith",[89,330,204],{"class":128},[89,332,333],{"class":229},"\"Controller\"",[89,335,233],{"class":128},[89,337,339],{"class":91,"line":338},19,[89,340,135],{"class":128},[89,342,344,347,349,351],{"class":91,"line":343},20,[89,345,346],{"class":128},"        ArchRule annotationRule ",[89,348,183],{"class":117},[89,350,292],{"class":124},[89,352,192],{"class":128},[89,354,356,358,360,362,364,366,368],{"class":91,"line":355},21,[89,357,198],{"class":128},[89,359,302],{"class":124},[89,361,305],{"class":128},[89,363,308],{"class":124},[89,365,204],{"class":128},[89,367,313],{"class":229},[89,369,270],{"class":128},[89,371,373,375,377,379,382],{"class":91,"line":372},22,[89,374,198],{"class":128},[89,376,323],{"class":124},[89,378,305],{"class":128},[89,380,381],{"class":124},"beAnnotatedWith",[89,383,384],{"class":128},"(RestController.class);  \n",[89,386,388],{"class":91,"line":387},23,[89,389,135],{"class":128},[89,391,393,396,399],{"class":91,"line":392},24,[89,394,395],{"class":128},"        rule.",[89,397,398],{"class":124},"check",[89,400,401],{"class":128},"(javaClasses);  \n",[89,403,405,408,410],{"class":91,"line":404},25,[89,406,407],{"class":128},"        annotationRule.",[89,409,398],{"class":124},[89,411,401],{"class":128},[89,413,415],{"class":91,"line":414},26,[89,416,239],{"class":128},[89,418,420],{"class":91,"line":419},27,[89,421,422],{"class":128},"}\n",[54,424,426],{"id":425},"_32-의존성-체크","3.2 의존성 체크",[58,428,430],{"id":429},"_321-controller-는-service-request-response-패키지의-클래스만-의존할-수-있다","3.2.1 Controller 는 service, request, response 패키지의 클래스만 의존할 수 있다.",[81,432,434],{"className":108,"code":433,"language":110,"meta":8,"style":8},"@Test  \n@DisplayName(\"Controller는 Service와 Request/Response 를 사용할 수 있음.\")  \nvoid controllerDependencyTest() {  \n    ArchRule rule = classes()  \n            .that().resideInAnyPackage(\"..controller\")  \n            .should().dependOnClassesThat()  \n            .resideInAnyPackage(\"..service..\", \"..request..\",\"..response..\");  \n  \n    rule.check(javaClasses);  \n}\n",[73,435,436,445,458,468,479,496,509,534,538,547],{"__ignoreMap":8},[89,437,438,441,443],{"class":91,"line":92},[89,439,440],{"class":128},"@",[89,442,252],{"class":117},[89,444,135],{"class":128},[89,446,447,449,451,453,456],{"class":91,"line":132},[89,448,440],{"class":128},[89,450,262],{"class":117},[89,452,204],{"class":128},[89,454,455],{"class":229},"\"Controller는 Service와 Request/Response 를 사용할 수 있음.\"",[89,457,270],{"class":128},[89,459,460,463,466],{"class":91,"line":138},[89,461,462],{"class":117},"void",[89,464,465],{"class":124}," controllerDependencyTest",[89,467,174],{"class":128},[89,469,470,473,475,477],{"class":91,"line":143},[89,471,472],{"class":128},"    ArchRule rule ",[89,474,183],{"class":117},[89,476,292],{"class":124},[89,478,192],{"class":128},[89,480,481,484,486,488,490,492,494],{"class":91,"line":149},[89,482,483],{"class":128},"            .",[89,485,302],{"class":124},[89,487,305],{"class":128},[89,489,308],{"class":124},[89,491,204],{"class":128},[89,493,313],{"class":229},[89,495,270],{"class":128},[89,497,498,500,502,504,507],{"class":91,"line":154},[89,499,483],{"class":128},[89,501,323],{"class":124},[89,503,305],{"class":128},[89,505,506],{"class":124},"dependOnClassesThat",[89,508,192],{"class":128},[89,510,511,513,515,517,520,523,526,529,532],{"class":91,"line":165},[89,512,483],{"class":128},[89,514,308],{"class":124},[89,516,204],{"class":128},[89,518,519],{"class":229},"\"..service..\"",[89,521,522],{"class":128},", ",[89,524,525],{"class":229},"\"..request..\"",[89,527,528],{"class":128},",",[89,530,531],{"class":229},"\"..response..\"",[89,533,233],{"class":128},[89,535,536],{"class":91,"line":177},[89,537,135],{"class":128},[89,539,540,543,545],{"class":91,"line":195},[89,541,542],{"class":128},"    rule.",[89,544,398],{"class":124},[89,546,401],{"class":128},[89,548,549],{"class":91,"line":219},[89,550,422],{"class":128},[58,552,554],{"id":553},"_322-controller-는-model-을-의존할-수-없다","3.2.2 Controller 는 model 을 의존할 수 없다.",[81,556,558],{"className":108,"code":557,"language":110,"meta":8,"style":8},"@Test  \n@DisplayName(\"Controller 는 모델을 사용할 수 없다.\")  \nvoid controllerCantHaveModelTest() {  \n    ArchRule rule = noClasses()  \n            .that().resideInAnyPackage(\"..controller\")  \n            .should().dependOnClassesThat().resideInAnyPackage(\"..model..\");  \n  \n    rule.check(javaClasses);  \n}\n",[73,559,560,568,581,590,601,617,638,642,650],{"__ignoreMap":8},[89,561,562,564,566],{"class":91,"line":92},[89,563,440],{"class":128},[89,565,252],{"class":117},[89,567,135],{"class":128},[89,569,570,572,574,576,579],{"class":91,"line":132},[89,571,440],{"class":128},[89,573,262],{"class":117},[89,575,204],{"class":128},[89,577,578],{"class":229},"\"Controller 는 모델을 사용할 수 없다.\"",[89,580,270],{"class":128},[89,582,583,585,588],{"class":91,"line":138},[89,584,462],{"class":117},[89,586,587],{"class":124}," controllerCantHaveModelTest",[89,589,174],{"class":128},[89,591,592,594,596,599],{"class":91,"line":143},[89,593,472],{"class":128},[89,595,183],{"class":117},[89,597,598],{"class":124}," noClasses",[89,600,192],{"class":128},[89,602,603,605,607,609,611,613,615],{"class":91,"line":149},[89,604,483],{"class":128},[89,606,302],{"class":124},[89,608,305],{"class":128},[89,610,308],{"class":124},[89,612,204],{"class":128},[89,614,313],{"class":229},[89,616,270],{"class":128},[89,618,619,621,623,625,627,629,631,633,636],{"class":91,"line":154},[89,620,483],{"class":128},[89,622,323],{"class":124},[89,624,305],{"class":128},[89,626,506],{"class":124},[89,628,305],{"class":128},[89,630,308],{"class":124},[89,632,204],{"class":128},[89,634,635],{"class":229},"\"..model..\"",[89,637,233],{"class":128},[89,639,640],{"class":91,"line":165},[89,641,135],{"class":128},[89,643,644,646,648],{"class":91,"line":177},[89,645,542],{"class":128},[89,647,398],{"class":124},[89,649,401],{"class":128},[89,651,652],{"class":91,"line":195},[89,653,422],{"class":128},[655,656],"hr",{},[28,658,659],{},"Reference",[19,661,662,665,674,676],{},[22,663,664],{},"hi",[22,666,667],{},[668,669,673],"a",{"href":670,"rel":671},"https://www.inflearn.com/course/%EC%A5%AC%EC%A5%AC%EC%99%80-%ED%95%98%EB%A3%A8%EB%A7%8C%EC%97%90-%EB%81%9D%EB%82%B4%EB%8A%94-%EC%8A%A4%ED%94%84%EB%A7%81%ED%85%8C%EC%8A%A4%ED%8A%B8/dashboard",[672],"nofollow","쥬쥬와-하루만에-끝내는-스프링테스트",[22,675,24],{},[22,677,678],{},"ㅇㅇ",[62,680,681],{},[22,682,24],{},[684,685,686],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .sXGI6, html code.shiki .sXGI6{--shiki-default:#D73A49}html pre.shiki code .stlaL, html code.shiki .stlaL{--shiki-default:#6F42C1}html pre.shiki code .sXk0b, html code.shiki .sXk0b{--shiki-default:#24292E}html pre.shiki code .s2cXZ, html code.shiki .s2cXZ{--shiki-default:#032F62}",{"title":8,"searchDepth":132,"depth":132,"links":688},[689,690,693,694],{"id":16,"depth":132,"text":17},{"id":14,"depth":132,"text":52,"children":691},[692],{"id":54,"depth":138,"text":56},{"id":78,"depth":132,"text":79},{"id":97,"depth":132,"text":98,"children":695},[696,697],{"id":101,"depth":138,"text":102},{"id":425,"depth":138,"text":426},{"id":699,"title":700,"date":701,"description":702,"path":703,"body":704},"contents/blog/line/line.md","라인","2021-10-26","meta description of the page","/blog/line/line",{"type":11,"value":705,"toc":724},[706,712,715,718,720],[28,707,708,709,711],{},"dddd",[38,710],{},"\ndd",[28,713,714],{},"dd",[28,716,717],{},"여기는아님",[655,719],{},[14,721,723],{"id":722},"using-backticks","Using Backticks",{"title":8,"searchDepth":132,"depth":132,"links":725},[726],{"id":722,"depth":132,"text":723},[728,731,734,736,740,743,746,749,753,757,760,764,767,771],{"id":703,"title":700,"titles":729,"content":730,"level":92},[],"meta description of the page dddd\ndd dd 여기는아님",{"id":732,"title":723,"titles":733,"content":8,"level":132},"/blog/line/line#using-backticks",[700],{"id":9,"title":6,"titles":735,"content":8,"level":92},[],{"id":737,"title":17,"titles":738,"content":739,"level":132},"/blog/test#_1-archunit-을-활용한-테스트",[6],"테스트테스트 런타임전에 코드를 분석한다.\n코드 컨벤션, 안티 패턴등을 체크하는데 유용하다.\n클래스의 postfix, 의존성, 어노테이션 체크등 여러가지 기능을 제공한다.\n클래스의 postfix, 의존성, 어노테이션 체크등 여러가지 기능을 제공한다.",{"id":741,"title":49,"titles":742,"content":8,"level":92},"/blog/test#h1",[],{"id":744,"title":52,"titles":745,"content":8,"level":132},"/blog/test#h2",[49],{"id":747,"title":56,"titles":748,"content":8,"level":138},"/blog/test#h3",[49,52],{"id":750,"title":60,"titles":751,"content":752,"level":143},"/blog/test#h4",[49,52,56],"순서테스트순서테스트 2 code 테스트 입니다",{"id":754,"title":79,"titles":755,"content":756,"level":132},"/blog/test#_2-의존성",[49],"testImplementation 'com.tngtech.archunit:archunit:1.1.0'",{"id":758,"title":98,"titles":759,"content":8,"level":132},"/blog/test#_3-테스트-작성",[49],{"id":761,"title":102,"titles":762,"content":763,"level":138},"/blog/test#_31-코드-컨벤션-체크",[49,98],"아래의 예제는 controller 패키지의 클래스명은 Controller 로 끝나야하고, @RestController 어노테이션을 포함해야 한다는 것을 검증하는 코드이다. public class ArchitectureTest {  \n  \n  \n    JavaClasses javaClasses;  \n  \n    @BeforeEach  \n    void setup() {  \n        javaClasses = new ClassFileImporter()  \n                .withImportOption(new ImportOption.DoNotIncludeTests())  \n                .importPackages(\"com.example.deuktest\");  \n    }  \n  \n    @Test  \n    @DisplayName(\"Contoller 패키지의 클래스는 Contoller 로 끝나야한다.\")  \n    void controllerTest(){  \n        ArchRule rule = classes()  \n                .that().resideInAnyPackage(\"..controller\")  \n                .should().haveSimpleNameEndingWith(\"Controller\");  \n  \n        ArchRule annotationRule = classes()  \n                .that().resideInAnyPackage(\"..controller\")  \n                .should().beAnnotatedWith(RestController.class);  \n  \n        rule.check(javaClasses);  \n        annotationRule.check(javaClasses);  \n    }  \n}",{"id":765,"title":426,"titles":766,"content":8,"level":138},"/blog/test#_32-의존성-체크",[49,98],{"id":768,"title":430,"titles":769,"content":770,"level":143},"/blog/test#_321-controller-는-service-request-response-패키지의-클래스만-의존할-수-있다",[49,98,426],"@Test  \n@DisplayName(\"Controller는 Service와 Request/Response 를 사용할 수 있음.\")  \nvoid controllerDependencyTest() {  \n    ArchRule rule = classes()  \n            .that().resideInAnyPackage(\"..controller\")  \n            .should().dependOnClassesThat()  \n            .resideInAnyPackage(\"..service..\", \"..request..\",\"..response..\");  \n  \n    rule.check(javaClasses);  \n}",{"id":772,"title":554,"titles":773,"content":774,"level":143},"/blog/test#_322-controller-는-model-을-의존할-수-없다",[49,98,426],"@Test  \n@DisplayName(\"Controller 는 모델을 사용할 수 없다.\")  \nvoid controllerCantHaveModelTest() {  \n    ArchRule rule = noClasses()  \n            .that().resideInAnyPackage(\"..controller\")  \n            .should().dependOnClassesThat().resideInAnyPackage(\"..model..\");  \n  \n    rule.check(javaClasses);  \n} Reference hi쥬쥬와-하루만에-끝내는-스프링테스트테스트ㅇㅇ 테스트 html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .sXGI6, html code.shiki .sXGI6{--shiki-default:#D73A49}html pre.shiki code .stlaL, html code.shiki .stlaL{--shiki-default:#6F42C1}html pre.shiki code .sXk0b, html code.shiki .sXk0b{--shiki-default:#24292E}html pre.shiki code .s2cXZ, html code.shiki .s2cXZ{--shiki-default:#032F62}",1738313250627]